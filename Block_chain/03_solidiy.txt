// SPDX-License-Identifier: MIT
// compiler version must be greater than or equal to 0.8.13 and less than 0.9.0
pragma solidity >=0.4.16 <0.9.0;

contract abc {
    struct User{
        uint id;
        string name;
    }
    User[] public users;
    uint public nextId=0;
    function Create(string memory name) public{
        users.push(User(nextId,name));
        nextId++;
    }
    function Read(uint id) view public returns(uint, string memory){
        for(uint i=0; i<users.length; i++){
            if(users[i].id==id){
                return(users[i].id,users[i].name);
            }
        }
    }
    function Update(uint id, string memory name) public{
        for(uint i=0; i<users.length; i++){
            if(users[i].id==id){
                users[i].name=name;
            }
        }
    }
    function Delete(uint id) public {
        delete users[id];
    }
    function find(uint id) view internal returns(uint){
        for(uint i=0; i<users.length; i++){
            if(users[i].id==id){
                return i;
            }
        }
    }

}